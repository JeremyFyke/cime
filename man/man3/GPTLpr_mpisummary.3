.\" $Id: GPTLpr_mpisummary.3,v 1.1 2007-07-30 14:54:22 rosinski Exp $
.TH GPTLpr_mpisummary 3 "April, 2007" "GPTL"

.SH NAME
GPTLpr_mpisummary \- Print a counter summary across all threads and tasks

.SH SYNOPSIS
.B C Interface:
.nf
int GPTLpr_mpisummary (int comm); /* communicator: 0 means use MPI_COMM_WORLD */
.fi

.B Fortran Interface:
.nf
integer gptlpr_mpisummary (integer comm)  ! communicator: 0 means use MPI_COMM_WORLD
.fi

.SH DESCRIPTION
Opens a file named timing.mpisummary and writes results to it. MPI must be
active (i.e. MPI_Init must have been called, and MPI_Finalize not yet called)
in order to use this function. Timing region summary info is gathered across all threads
and all MPI tasks for the input communicator. Only regions which exist for
thread 0, task 0 are considered. This should be made more general. But this
routine is brand new and should be considered experimental. Testing so far
has produced correct results. 

.SH ARGUMENTS
.I comm
-- MPI communicator to sum across. An input of 0 means use MPI_COMM_WORLD

.SH RESTRICTIONS
.B GPTLinitialize()
must have been called. To obtain any useful data, one or more
pairs of 
.B GPTLstart()/GPTLstop()
calls need to have been exercised.

.SH RETURN VALUES
On success, this function returns 0.
On error, a negative error code is returned and a descriptive message
printed. 

.SH EXAMPLE OUTPUT
None yet provided.

.SH BUGS
Only regions specified by task 0, thread 0 are checked. No indentation is
performed. Building GPTL with this feature enabled means all executables
linked with it will require MPI also be linked in, whether or not it's
needed. This could be fixed by building GPTL as a shared library.

.SH SEE ALSO
.BR GPTLpr "(3)" 

