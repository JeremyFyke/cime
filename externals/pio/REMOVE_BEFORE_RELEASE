Information needs to go in proper documentation

State of dev - Nov. 5 2014

Key:

>> shell command
-- command output 
# or = textual comment

===== Yellowstone_intel =====

>>module load python
>>python scripts/python/buildPio.py intel

--75% tests passed, 5 tests failed out of 20

--Total Test time (real) = 290.20 sec

--The following tests FAILED:
--          5 - pio_file_fail (Failed)
--          6 - ncdf_simple_tests (Failed)
--          7 - ncdf_get_put_1proc (Failed)
--          8 - ncdf_get_put_2proc (Failed)
--          9 - ncdf_fail (Failed)
--Errors while running CTest

>>cd build_yellowstone_intel/examples/f03

>>bsub -Is -q caldera -n2 -PP93300070 -W0:20 "mpirun.lsf ./examplePio_f90"
>>ncdump examplePio_f90.nc | grep foo
        int foo(x) ;
 foo = 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 43, 43, 43, 43, 43, 43 ;

>>cd build_yellowstone_intel/examples/c
>>bsub -Is -q caldera -n8 -PP93300070 -W0:20 "mpirun.lsf ./examplePio_c"
--Job <115205> is submitted to queue <caldera>.
--<<Waiting for dispatch ...>>
--<<Starting on caldera15-ib>>
--Execute poe command line: poe  ./examplePio_c
--Running with 8 MPI processes and 8 PIO processes.
--Close file 65536
>>ncdump examplePio_c.nc | grep foo
--        int foo(x) ;
-- foo = 42, 42, 43, 43, 44, 44, 45, 45, 46, 46, 47, 47, 48, 48, 49, 49 ;

===== Yellowstone_pgi =====

# no cxx build for examples since it seems like PGI's cxx compilers are broken on yellowstone?

>>module load python
>>python scripts/python/buildPio.py pgi

--21/21 Test #21: piotest ..........................***Failed    0.48 sec

--90% tests passed, 2 tests failed out of 21

--Total Test time (real) = 279.57 sec

--The following tests FAILED:
--          5 - pio_file_fail (Failed)
--         21 - piotest (Failed)
--Errors while running CTest

>>cd build_yellowstone_pgi/examples/f03
>>bsub -Is -q caldera -n8 -PP93300070 -W0:20 "mpirun.lsf ./examplePio_f90"
--Job <125873> is submitted to queue <caldera>.
--<<Waiting for dispatch ...>>
--<<Starting on caldera05-ib>>
--Execute poe command line: poe  ./examplePio_f90
--Close file 65536
>>ncdump examplePio_f90.nc
netcdf examplePio_f90 {
dimensions:
        x = 16 ;
variables:
        int foo(x) ;
data:

 foo = 42, 42, 43, 43, 44, 44, 45, 45, 46, 46, 47, 47, 48, 48, 49, 49 ;
}

# or

>>cd build_yellowstone_pgi/examples/c
>>ncdump examplePio_c.nc
--netcdf examplePio_c {
--dimensions:
--        x = 16 ;
--variables:
--        int foo(x) ;
--data:

-- foo = 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, _ ;
--}

#~# NOTE looks like a problem with PGI + C with 16 pes!  Compare with darwin_gnu


===== Yellowstone_gnu =====




===== Goldbach_nag (linux cluster) =====

# c examples won't build due to a lib_curl dependence for both intel and nag

>>python scripts/python/buildPio.py nag
--20/20 Test #20: pio_decomp_tests_4p_2iop_1agg ....   Passed    2.45 sec

--95% tests passed, 1 tests failed out of 20

--Total Test time (real) =  27.88 sec

--The following tests FAILED:
--          5 - pio_file_fail (Failed)
--Errors while running CTest
>>cd build_goldbach_nag/examples/f03

>>/usr/local/openmpi-1.6.5-gcc-g++-4.4.7-3-nag-5.3.1-907/bin/mpirun -np 4 ./examplePio_f90
Close file 65536
>>ncdump examplePio_f90.nc | grep foo
--        int foo(x) ;
-- foo = 42, 42, 42, 42, 43, 43, 43, 43, 44, 44, 44, 44, 45, 45, 45, 45 ;




===== Goldbach_nag (linux cluster) =====



===== Darwin_gnu =====

# To run on a machine running OSX with gnu:

>>python scripts/python/buildPio.py gnu

# testing output ::

--The following tests FAILED:
--          5 - pio_file_fail (Failed)
--          6 - ncdf_simple_tests (Failed)
--          7 - ncdf_get_put_1proc (Failed)
--          8 - ncdf_get_put_2proc (Failed)
--          9 - ncdf_fail (Failed

# examples::

>>cd build_darwin_gnu/examples/f03
>>./examplePio_f90
--Running with 1 MPI processes and 1 PIO processes. 
--Close file 65536 

>>ncdump examplePio_c.nc | grep foo
--        int foo(x) ;
-- foo = 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42 ;

# or 

>>cd build_darwin_gnu/examples/c
>>/opt/local/bin/mpiexec-mpich-gcc48 -np 16 examplePio_c
--Running with 16 MPI processes and 16 PIO processes. 
--Close file 65536

>>ncdump examplePio_c.nc | grep foo
--        int foo(x) ;
-- foo = 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 ;





