gptl3_2: Handle multiple parents
	 Add parsegptlout.pl for handling MPI output
	 Add capability for derived counters (currently just IPC and CI)
	 Junk autoconf in favor of macros.make
	 Vastly faster start/stop for auto-instrumented codes
	 hex2name.pl properly indents output
	 Efficiency enhancements (e.g. no character copying on start/stop)
	 Use stack to determine parent, for simplicity, efficiency, correctness
	 Arrange timers in tree for proper handling of parent/child
gptl2_16: Rename GPTLpr_mpistats to GPTLpr_summary. Make it behave
	  reasonably even when MPI not enabled.
	  Close print files after writing to them.
gptl2_14: Add GPTLpr_mpistats entry point. 
	  Check string starts with "PAPI_" before lopping off.
	  Remove "inline" attribute to timing functions--they're probably
	  not inlined anyway.
gptl2_13: verbose = false by default. Wrap informational printout in 
	  test on "verbose". Add verbose option to gptl_papi.c
	  Modified behavior of scale.c
gptl2_11: Man pages. Default narrowprint to true. Fix minor formatting
	  bug in GPTLpr.
gptl2_10: Add GPTLpercent (of 1st timers[0]), and GPTLpersec (for PAPI).
	  Add timingModule.F90
gptl2_9: Update camgptl.inc to match gptl.inc (forgot in gptl2_8)
gptl2_8: Add option to retain parent/child relationships for printing.
	 Change behavior of ambiguous timers to put a "*" in column 1.
gptl2_7: Add GPTLget_nregions and GPTLget_regionname
gptl2_6: Add GPTLquerycounters (C and Fortran)
gptl2_5: Enable native events
gptl2_3: Minor changes to papiomptest.F
gptl2_2: Multiplexing: can enable, disable, or always enable.
	 GPTLnarrowprint (fewer digits)
	 Add cmd-line PAPI option arg to utrtest.
	 papiomptest no longer does malloc: caused trouble on SGI
gptl1_7: Split tests/ into ctests/ and ftests.
	 Fix logic on Fortran underscoring.
	 Return error when selected PAPI option not available.
	 Further fix (1.6 was not complete) on PAPI overhead.
gptl1_6: - Fix (bogus) print occurring from PAPI when overheadstats disabled.
	 - Add get_memusage and memusage test.
	 - Add "basic" test.
	 - Hack aclocal.m4 for openMP flags.
gptl1_5: - Fixed "install" target.  
	 - Add NANOTIME (Linux only) option.
	 - Replace gettimeofday with generic utr (underlying timing routine)
	 option.  
	 - Remove DIAG ifdef option.  
	 - Interpret nested "start" calls as recursion.  
	 - In NUMERIC mode, shift tag by 2 bits.
gptl1_4: - Added NUMERIC_TIMERS (configure --enable-numeric) for speedup.
	 If enabled, user args to start/stop MUST be numeric tags rather
	 than character strings.  Intended primarily to be used with
	 automatic code instrumentation (g++ -finstrument-functions), 
	 and tests/jr-resolve.pl to back out a name.
	 - Added "numeric" to tests/ in order to test --enable-numeric.
	 - Remove HASH as an option (it is now assumed) for readability.
	 - Moved some OMP code from threadutil.c to gptl.c strictly for
	 efficiency (inlining).  Hated to do it because the code really
	 doesn't belong there.
	 - Added jr-resolve.pl to tests/ to back out symbol name from
	 address. 
gpt1_2: Changed GPT to GPTL to avoid overlap with other utilities named GPT...
gpt1_1: Added README and man pages.  Better commenting.  Fixed bug in min
        calcs in GPTstop.
gpt1_0: Added PAPI support.  For whatever reason, on IBM get negative
	increments occasionally.
gpt0_3: Added overflow diagnostic novfl
	Migrate threading ops to threadutil.c
	Remove useless calcs from GPTstop
	Added iteration option to depth test
	overhead test is now a C code and tests potentially expensive
          calcs embedded in the library
	Removed exp, expensive, timetimeing tests
	Reenabled pthreads
	Fix SGI complaints about arg lists
	Changed depth array to mitigate false sharing
	Added DISABLE_TIMERS ifdef
	autoconf bugfix
	Change microsecond accumulator test from 1000000 to 10000000
gpt0_2: Remove unused components in Timer. Make "name" component a fixed
        size for efficiency.
gpt0_1: Add hashtable for efficiency. Add some more tests.  Add ChangeLog.
	Bugfix for printing.
	
