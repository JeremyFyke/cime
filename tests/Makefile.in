CC           = @CC@
CFLAGS       = @CFLAGS@
THREADFLAGS  = @THREADFLAGS@ @THREADDEFS@
LDFLAGS      = -L.. -lgpt @LIBS@ @LDFLAGS@ @CFLAGS@ @THREADFLAGS@

FC           = @F77@
FFLAGS       = @FFLAGS@
FTHREADFLAGS = @FTHREADFLAGS@
FLDFLAGS     = -L.. -lgpt @THREADFLAGS@

COBJS = llcost.o depth.o overhead.o
CEXES = llcost   depth   overhead

FOBJS = flopsperclock.o omptest.o errtest.o opscost.o \
        hashtest.o
FEXES = flopsperclock   omptest   errtest   opscost \
        hashtest

all: $(CEXES) $(FEXES)
cexes: $(CEXES)
fexes: $(FEXES)

llcost: llcost.o
	$(CC) -o $@ llcost.o $(CFLAGS) $(LDFLAGS)
depth: depth.o
	$(CC) -o $@ depth.o $(CFLAGS) $(LDFLAGS)
overhead: overhead.o
	$(CC) -o $@ overhead.o $(CFLAGS) $(THREADFLAGS) $(LDFLAGS)
flopsperclock: flopsperclock.o
	$(F77) -o $@ flopsperclock.o $(FFLAGS) $(FLDFLAGS)
omptest: omptest.o
	$(F77) -o $@ omptest.o $(FFLAGS) $(FTHREADFLAGS) $(FLDFLAGS)
errtest: errtest.o
	$(F77) -o $@ errtest.o $(FFLAGS) $(FLDFLAGS)
opscost: opscost.o
	$(F77) -o $@ opscost.o $(FFLAGS) $(FLDFLAGS)
hashtest: hashtest.o
	$(F77) -o $@ hashtest.o $(FFLAGS) $(FTHREADFLAGS) $(FLDFLAGS)

clean:
	rm $(FOBJS) $(COBJS) $(FEXES) $(CEXES)

# Add appropriate thread flags to threaded executables

overhead.o: overhead.c
	$(CC) -c $(CFLAGS) $(THREADFLAGS) $<
hashtest.o: hashtest.F
	$(F77) -c $(FFLAGS) $(FTHREADFLAGS) $<
omptest.o: omptest.F
	$(F77) -c $(FFLAGS) $(FTHREADFLAGS) $<
